# GET BASE IMAGE
FROM docker.arvancloud.ir/python:3.12.3-alpine3.20

# INSTALL REQUIRED PACKAGES ON ALPINE
RUN echo "https://mirrors.gigenet.com/alpinelinux/v3.20/main/" > /etc/apk/repositories && \
echo "https://mirrors.gigenet.com/alpinelinux/v3.20/community/" >> /etc/apk/repositories
RUN ["apk", "update"]
RUN apk add \
  gcc \
  python3-dev \
  musl-dev \
  linux-headers \
  curl \
  libxml2-dev \
  libxslt-dev \
  build-base \
  cairo \
  cairo-dev \
  cargo \
  freetype-dev \
  gcc \
  gdk-pixbuf-dev \
  gettext \
  jpeg-dev \
  lcms2-dev \
  libffi-dev \
  openjpeg-dev \
  openssl-dev \
  pango-dev \
  poppler-utils \
  postgresql-client \
  postgresql-dev \
  py-cffi \
  python3-dev \
  rust \
  tcl-dev \
  tiff-dev \
  tk-dev \
  zlib-dev \
  build-base

WORKDIR /code

# INSTALL PDM AND DEPENDENCIES
RUN ["pip", "install", "--upgrade", "pip", "setuptools", "wheel"]
RUN ["pip", "install", "pdm"]
RUN ["pdm", "self", "update"]
COPY ./pdm.lock /code/
COPY ./pyproject.toml /code/
RUN pdm export -o requirements.txt
# RUN ["pip", "install", "-r", "/code/requirements.txt", "-i" , "https://mirror-pypi.runflare.com/simple/"]
RUN ["pip", "install", "-r", "/code/requirements.txt"]

# COPY SOURCE CODE INTO DOCKER IMAGE
COPY . /code/

RUN ["mkdir", "-p", "logs"]

# GRANT EXCUTE PERMISSSION TO ENTRYPOINTS FILES
RUN ["chmod", "+x", "./infra/entrypoints/api_test.sh"]
RUN ["chmod", "+x", "./infra/entrypoints/apscheduler_test.sh"]

# PYTHON CONFIGS
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# DJANGO CONFIGS
ENV DJANGO_SETTINGS_MODULE=samaneh.settings
ENV DEBUG=False

# MONGODB & REDIS SERVICE NAMES
ENV REDIS_SERVICE_NAME=redis_test
ENV MONGODB_SERVICE_NAME=mongodb_test

# SMTP EMAIL CONFIGS
ENV EMAIL_HOST=smtp.gmail.com
ENV EMAIL_PORT=587
ENV EMAIL_HOST_USER=armansmtptest@gmail.com
ENV EMAIL_TO=saraey.gholamreza@gmail.com

ENV POSTGRES_SERVICE_NAME=postgres_test

ENV ADMIN_USERNAME=admin
ENV ADMIN_FIRST_NAME=ادمین

ENV SERVER_NAME=TEST

RUN apk add htop
